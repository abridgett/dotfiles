#http://www.jukie.net/~bart/conf/gitconfig
#
# git filter-branch -f --prune-empty --index-filter 'git rm --cached -r -q -- .; git reset -q $GIT_COMMIT -- jenkins' -- --all

[alias]
st = status
s = status -s

rlog = log --pretty=format:\"%h %Cblue%cr%Creset %cn %Cgreen%s%Creset\"
l = log --graph --decorate --pretty=oneline --abbrev-commit 
la = log --graph --decorate --pretty=oneline --abbrev-commit --all 

br = branch
co = checkout 
# Pull in remote changes for the current repository and all its submodules
pr = !"git pull; git submodule foreach git pull origin master"
# Switch to a branch, creating it if necessary
go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"
# Amend the currently staged files to the latest commit
amend = commit --amend --reuse-message=HEAD
# Credit an author on the latest commit
credit = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }; f"

# Show verbose output about tags, branches or remotes
tags = tag -l
branches = branch -a
remotes = remote -v


# Show the diff between the latest commit and the current state
d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"
dc = diff --cached 
ls = ls-files 
# Show files ignored by git: 
ign = ls-files -o -i --exclude-standard
promote = !$ZSH/bin/git-promote
wtf     = !$ZSH/bin/git-wtf
rank-contributors = !$ZSH/bin/git-rank-contributors
# List contributors with number of commits
contributors = shortlog --summary --numbered
count   = !git shortlog -sn

# Interactive rebase with the given number of latest commits
reb = "!r() { git rebase -i HEAD~$1; }; r"

# Find branches containing commit
fb = "!f() { git branch -a --contains $1; }; f"

# Find tags containing commit
ft = "!f() { git describe --always --contains $1; }; f"

# Find commits by source code
fc = "!f() { git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short -S$1; }; f"

# Find commits by commit message
fm = "!f() { git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short --grep=$1; }; f"

# Remove branches that have already been merged with master
# a.k.a. ‘delete merged’
dm = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"

# Merge GitHub pull request on top of the `master` branch
mpr = "!f() { \
  if [ $(printf \"%s\" \"$1\" | grep '^[0-9]\\+$' > /dev/null; printf $?) -eq 0 ]; then \
    git fetch origin refs/pull/$1/head:pr/$1 && \
    git rebase master pr/$1 && \
    git checkout master && \
    git merge pr/$1 && \
    git branch -D pr/$1 && \
    git commit --amend -m \"$(git log -1 --pretty=%B)\n\nCloses #$1.\"; \
  fi \
}; f"

[color]
ui = auto
diff = auto
status = auto
branch = auto
#  [color "branch"] 
#    current = yellow reverse 
#    local = yellow 
#    remote = green 
#  [color "diff"] 
#    meta = yellow bold 
#    frag = magenta bold   # line info
#    old = red bold   # deletions
#    new = green bold   # additions
#  [color "status"] 
#    added = yellow 
#    changed = green 
#    untracked = cyan

[core]
pager = less -FRSX
excludesfile = ~/.gitignore
# Make `git rebase` safer on OS X
# More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
trustctime = false

# Prevent showing files whose names contain non-ASCII symbols as unversioned.
# http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
precomposeunicode = false

[push]
  default = current
  # https://github.com/blog/2094-new-year-new-git-release
  recurseSubmodules = check

[apply]
whitespace = fix

[mergetool]
keepBackup = false

# detects copies as well as renames
[diff]
renames = copies
compactionHeuristic = true

[difftool]
prompt = false

# Delay in deci-seconds
[help]
autocorrect = 10

# Include summaries of merged commits in newly created merge commit messages
[merge]
log = true

[hub]
protocol = https

[include]
path = ~/.dotfiles/git/gitconfig.local

# URL shorthands
[url "git@github.com:"]
	insteadOf = "gh:"
	pushInsteadOf = "github:"
	pushInsteadOf = "git://github.com/"

[url "git://github.com/"]
	insteadOf = "github:"

[url "git@gist.github.com:"]
	insteadOf = "gst:"
	pushInsteadOf = "gist:"
	pushInsteadOf = "git://gist.github.com/"

[url "git://gist.github.com/"]
	insteadOf = "gist:"
[user]
	name = Adrian Bridgett
	email = adrian@smop.co.uk
[filter "hawser"]
	clean = git hawser clean %f
	smudge = git hawser smudge %f
	required = true
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path =
[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[filter "lfs"]
	clean = git lfs clean %f
	smudge = git lfs smudge %f
	required = true
[rebase]
	autostash = true
[submodule]
	fetchJobs = 0
