" TIPS
" :[VS]Explore (vertical, split) file explorer

syntax on
" help syntax hilighting
set background=dark
"colo slate
" draws an underline across the current line (hiding any underscores!)
"set cursorline

" incremental search
set incsearch
" case-insensitive search
set ignorecase smartcase
" highlight further matches
set hlsearch

" set visual bell
set vb

" visible white space
set listchars=tab:>-,trail:.,eol:$
" display row,column
set ruler
" display number of lines selected
set showcmd
" jump briefly to matching bracket if on screen (use "matchparen" instead)
"set showmatch
" display --INSERT-- etc
set showmode
" change window title
set title titlestring=VIM\ -\ %<%F%=%(\ [%M%R%H]%)

" keep a bit more history
set history=1000

" INDENTING
" f11 now toggles paste mode (aka don't mess with my indents)
set pastetoggle=<f11>
" autoindent = same as previous line
" smartindent = tries to understand C
" cindent = smarter
" how many spaces to use per indent (cindent, >>, <<)
set shiftwidth=2
" use N spaces until you reach tabstop, then use tabs
set softtabstop=2
set tabstop=2

" allow backspace to go over autoindent, EOL, start of inserts
set backspace=indent,eol,start

" netrw remote support: :e scp://server.example.com//tmp/filename
" NB: needs extra / in middle as it defaults to home directory
" some non-default options the author uses
" change "v" so that it splits right/left not left/right
"let g:netrw_altv          = 1
" cache directory listings (local and remote)
let g:netrw_fastbrowse    = 2
" keepdir=0 will make vim track netrw's director
"let g:netrw_keepdir       = 0
" 0=file per line, 1=details per line, 2=many files per line, 3=tree
let g:netrw_liststyle     = 2
" do not display transfers
"let g:netrw_silent        = 1
" highlight tmp, backup files etc
let g:netrw_special_syntax= 1

" Spell checking
" z= (suggest) zg (add)
set spelllang=en_gb
set spellfile=~/.vim/spell.en.utf-8.add

" never parse modelines (vimrc in edited files) CVE-2007-2438
set nomodeline

" use email mode
au BufNewFile,BufRead /tmp/mutt*  setf mail
au BufNewFile,BufRead /tmp/mutt*  set ai et tw=68 spell

" Don't write backup file if vim is being called by "crontab -e"
au BufWrite /tmp/crontab.* set nowritebackup

" only tab complete upto what is unique
set wildmode=longest,list:longest,list:full



" from http://www.vim.org/scripts/script.php?script_id=2184
" Avoid installing twice or when in unsupported Vim version.
if exists('g:loaded_file_line') || (v:version < 700)
	finish
endif
let g:loaded_file_line = 1

" Reselect visual block after indent/outdent
vnoremap < <gv
vnoremap > >gv

" Force saving of files that require root
cmap w!! %!sudo tee > /dev/null %

" Automatically reload vimrc when it's saved
au BufWritePost .vimrc so ~/.vimrc

function! s:gotoline()
	let file = bufname("%")
	" Accept file:line:column: or file:line:column and file:line also
	let names =  matchlist( file, '\(.\{-1,}\):\(\d\+\)\(:\(\d*\):\?\)\?$')

	if len(names) != 0 && filereadable(names[1])
		let l:bufn = bufnr("%")
		exec "keepalt edit " . names[1]
		exec ":" . names[2]
		exec ":bwipeout " l:bufn
		if foldlevel(names[2]) > 0
			exec ":foldopen!"
		endif

		if (names[4] != '')
			exec "normal! " . names[4] . '|'
		endif
	endif

endfunction

autocmd! BufNewFile *:* nested call s:gotoline()

autocmd BufNewFile,BufRead *.thor set filetype=ruby

" Wrap gitcommit file types at the appropriate length
filetype indent plugin on
